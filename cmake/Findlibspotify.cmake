# - find Find the official Spotify library
# LIBSPOTIFY_INCLUDE_DIR - Where to find Find the official Spotify library header files (directory)
# LIBSPOTIFY_LIBRARIES - Find the official Spotify library libraries
# LIBSPOTIFY_LIBRARY_RELEASE - Where the release library is
# LIBSPOTIFY_LIBRARY_DEBUG - Where the debug library is
# LIBSPOTIFY_FOUND - Set to TRUE if we found everything (library, includes and executable)
 
# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler
 
IF( LIBSPOTIFY_INCLUDE_DIR AND LIBSPOTIFY_LIBRARY_RELEASE AND LIBSPOTIFY_LIBRARY_DEBUG )
    SET(LIBSPOTIFY_FIND_QUIETLY TRUE)
ENDIF( LIBSPOTIFY_INCLUDE_DIR AND LIBSPOTIFY_LIBRARY_RELEASE AND LIBSPOTIFY_LIBRARY_DEBUG )
 
FIND_PATH( LIBSPOTIFY_INCLUDE_DIR libspotify/api.h  )
 
FIND_LIBRARY(LIBSPOTIFY_LIBRARY_RELEASE NAMES spotify openspotify )
 
FIND_LIBRARY(LIBSPOTIFY_LIBRARY_DEBUG NAMES spotify openspotify HINTS /usr/lib/debug/usr/lib/ )
 
IF( LIBSPOTIFY_LIBRARY_RELEASE OR LIBSPOTIFY_LIBRARY_DEBUG AND LIBSPOTIFY_INCLUDE_DIR )
        SET( LIBSPOTIFY_FOUND TRUE )
ENDIF( LIBSPOTIFY_LIBRARY_RELEASE OR LIBSPOTIFY_LIBRARY_DEBUG AND LIBSPOTIFY_INCLUDE_DIR )
 
IF( LIBSPOTIFY_LIBRARY_DEBUG AND LIBSPOTIFY_LIBRARY_RELEASE )
        # if the generator supports configuration types then set
        # optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
        IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
                SET( LIBSPOTIFY_LIBRARIES optimized ${LIBSPOTIFY_LIBRARY_RELEASE} debug 
${LIBSPOTIFY_LIBRARY_DEBUG} )
        ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
    # if there are no configuration types and CMAKE_BUILD_TYPE has no value
    # then just use the release libraries
                SET( LIBSPOTIFY_LIBRARIES ${LIBSPOTIFY_LIBRARY_RELEASE} )
        ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
ELSEIF( LIBSPOTIFY_LIBRARY_RELEASE )
        SET( LIBSPOTIFY_LIBRARIES ${LIBSPOTIFY_LIBRARY_RELEASE} )
ELSE( LIBSPOTIFY_LIBRARY_DEBUG AND LIBSPOTIFY_LIBRARY_RELEASE )
        SET( LIBSPOTIFY_LIBRARIES ${LIBSPOTIFY_LIBRARY_DEBUG} )
ENDIF( LIBSPOTIFY_LIBRARY_DEBUG AND LIBSPOTIFY_LIBRARY_RELEASE )
 
IF( LIBSPOTIFY_FOUND )
        IF( NOT LIBSPOTIFY_FIND_QUIETLY )
                MESSAGE( STATUS "Found LibSpotify header file in ${LIBSPOTIFY_INCLUDE_DIR}")
                MESSAGE( STATUS "Found LibSpotify libraries: ${LIBSPOTIFY_LIBRARIES}")
        ENDIF( NOT LIBSPOTIFY_FIND_QUIETLY )
ELSE(LIBSPOTIFY_FOUND)
        IF( LIBSPOTIFY_FIND_REQUIRED)
                MESSAGE( FATAL_ERROR "Could not find LibSpotify" )
        ELSE( LIBSPOTIFY_FIND_REQUIRED)
                MESSAGE( STATUS "Optional package LibSpotify was not found" )
        ENDIF( LIBSPOTIFY_FIND_REQUIRED)
ENDIF(LIBSPOTIFY_FOUND)
