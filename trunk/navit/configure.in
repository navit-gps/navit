AC_INIT(navit, 0.0.1)
AM_INIT_AUTOMAKE
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_PROG_CC
if eval "test x$GCC = xyes"; then
        CFLAGS="$CFLAGS -Wall -Wcast-align -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wpointer-arith -Wreturn-type -D_GNU_SOURCE"
fi
AC_PROG_CXX
if eval "test x$G++ = xyes"; then
        CFLAGS="$CFLAGS -Wall -Wcast-align -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wpointer-arith -Wreturn-type -D_GNU_SOURCE"
fi


# CFLAGS="$CFLAGS -DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED"

AC_DISABLE_STATIC
AC_PROG_LIBTOOL

AC_ARG_ENABLE(avoid-unaligned,
[  --enable-avoid-unaligned          avoid unaligned accesses],
AVOID_UNALIGNED=$enableval, AVOID_UNALIGNED=no)
test x"${AVOID_UNALIGNED}" = xyes && AC_DEFINE(AVOID_UNALIGNED,[],Define to avoid unaligned access)

AC_ARG_ENABLE(avoid-float,
[  --enable-avoid-float              avoid floating point calculations],
AVOID_FLOAT=$enableval, AVOID_FLOAT=no)
test x"${AVOID_FLOAT}" = xyes && AC_DEFINE(AVOID_FLOAT,[],Define to avoid floating point)

AC_ARG_ENABLE(libgps,
[  --disable-libgps             don't use libgps],
USE_LIBGPS=$enableval, USE_LIBGPS=yes)

PKG_CHECK_MODULES(NAVIT, [glib-2.0 gmodule-2.0])
AC_SUBST(NAVIT_CFLAGS)
AC_SUBST(NAVIT_LIBS)

PKG_CHECK_MODULES(GTK2, [gtk+-2.0], [gtk2_pkgconfig=yes], [gtk2_pkgconfig=no])
if test "x$gtk2_pkgconfig" = "xyes"; then
   AC_DEFINE(HAVE_GTK2, 1, [Define to 1 if you have imlib2])
fi
AC_SUBST(GTK2_CFLAGS)
AC_SUBST(GTK2_LIBS)

PKG_CHECK_MODULES(FREETYPE2, [freetype2], [freetype2_pkgconfig=yes], [freetype2_pkgconfig=no])
if test "x$freetype2_pkgconfig" = "xyes"; then
   AC_DEFINE(HAVE_FREETYPE2, 1, [Define to 1 if you have imlib2])
fi
AC_SUBST(FREETYPE2_CFLAGS)
AC_SUBST(FREETYPE2_LIBS)

PKG_CHECK_MODULES(IMLIB2, [imlib2], [imlib2_pkgconfig=yes], [imlib2_pkgconfig=no])
if test "x$imlib2_pkgconfig" = "xyes"; then
   AC_DEFINE(HAVE_IMLIB2, 1, [Define to 1 if you have imlib2])
fi
AC_SUBST(IMLIB2_CFLAGS)
AC_SUBST(IMLIB2_LIBS)

AC_CHECK_HEADER(libspeechd.h, AC_DEFINE([HAVE_LIBSPEECHD],[],Define to 1 if you have the <libspeechd.h> header file.) SPEECHD_LIBS="-lspeechd",  AC_MSG_WARN([*** no libspeechd.h -- Speech output disabled]))
AC_SUBST(SPEECHD_CFLAGS)
AC_SUBST(SPEECHD_LIBS)

AC_CHECK_HEADER(
	SDL/SDL.h,
	AC_DEFINE(
		[HAVE_LIBSDL],
		[],
		Define to 1 if you have the <SDL/SDL.h> header file.
		)
		SDL_LIBS="-lSDL"
		sdl=yes,
	AC_MSG_WARN([*** no SDL/SDL.h -- SDL support disabled])
)
AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LIBS)

AC_PREPROC_IFELSE(
	CEGUI/CEGUI.h,
	AC_DEFINE(
		[HAVE_CEGUI],
		[],
		Define to 1 if you have the <CEGUI/CEGUI.h> header file.
		)
		CEGUI_LIBS="-lCEGUIBase -lCEGUIOpenGLRenderer"
		CEGUI_CFLAGS="-I /usr/local/include/CEGUI -I /usr/include/CEGUI"
		cegui=yes,
	AC_MSG_WARN([*** no CEGUI/CEGUI.h -- SDL support disabled])
	exit 1
)
AC_SUBST(CEGUI_CFLAGS)
AC_SUBST(CEGUI_LIBS)

AC_CHECK_HEADER(
	GL/gl.h,
	AC_DEFINE(
		[HAVE_OPENGL],
		[],
		Define to 1 if you have the <GL/gl.h> header file.
		)
		OPENGL_LIBS="-lGL -lGLU -lGLC"
		opengl=yes,
	AC_MSG_WARN([*** no GL/gl.h -- opengl and SDL support disabled])
)
AC_SUBST(OPENGL_CFLAGS)
AC_SUBST(OPENGL_LIBS)

AM_CONDITIONAL(GUI_SDL, [test "x$sdl" = "xyes" -a "x$cegui" = "xyes" -a "x$opengl" = "xyes" ])
AM_CONDITIONAL(GUI_GTK, [test "x$gtk2_pkgconfig" = "xyes"])
AM_CONDITIONAL(GRAPHICS_OPENGL, [test "x$opengl" = "xyes"])
AM_CONDITIONAL(GRAPHICS_GTK_DRAWING_AREA, [test "x$sdl" = "xyes"])

if test x"${USE_LIBGPS}" = xyes
then
	AC_CHECK_HEADER(gps.h, AC_DEFINE([HAVE_LIBGPS],[],Define to 1 if you have the <gps.h> header file.) LIBS="$LIBS -lgps",  AC_MSG_WARN([*** no gps.h -- gpsd support disabled]))
fi

PYTHON_LIB=""
PYTHON_INC=""
if test "$cross_compiling" = no; then
	AC_PATH_PROG(_PATH_PYTHON,[python])
	dnl Libraries and flags for embedded Python.
	dnl FIXME: I wish there was a less icky way to get this.
	if test x"$_PATH_PYTHON" != x ; then
		AC_MSG_CHECKING(for Python linkage)
		py_prefix=`$_PATH_PYTHON -c 'import sys; print sys.prefix'`
		py_ver=`$_PATH_PYTHON -c 'import sys; print sys.version[[:3]]'`
		py_libdir="${py_prefix}/lib/python${py_ver}"
		PYTHON_INC="-I${py_prefix}/include/python${py_ver}"
		if test -f $py_libdir/config/Makefile ; then
			py_libs=`grep '^LIBS=' $py_libdir/config/Makefile | sed -e 's/^.*=//'`
			py_libc=`grep '^LIBC=' $py_libdir/config/Makefile | sed -e 's/^.*=//'`
			py_libm=`grep '^LIBM=' $py_libdir/config/Makefile | sed -e 's/^.*=//'`
			py_liblocalmod=`grep '^LOCALMODLIBS=' $py_libdir/config/Makefile | sed -e 's/^.*=//'`
			py_libbasemod=`grep '^BASEMODLIBS=' $py_libdir/config/Makefile | sed -e 's/^.*=//'`
			PYTHON_LIB="-L$py_libdir/config $py_libs $py_libc $py_libm -lpython$py_ver $py_liblocalmod $py_libbasemod"
			PYTHON_LIB=`echo $PYTHON_LIB | sed -e 's/[ \\t]*/ /g'`
			CFLAGS="$CFLAGS $PYTHON_INC"
			LIBS="$LIBS $PYTHON_LIB"
			AC_MSG_RESULT($py_libdir)
		else
			AC_MSG_WARN([$py_libdir/config/Makefile missing, support for python disabled])
		fi
	fi
else
	AC_MSG_WARN([*** cross compiling, support for python disabled])
fi
AC_SUBST(PYTHON_LIB)
AC_SUBST(PYTHON_INC)

LIBS="$LIBS -rdynamic"

AC_OUTPUT([
Makefile
src/Makefile
src/data/Makefile
src/data/mg/Makefile
src/data/textfile/Makefile
src/data/garmin_img/Makefile
src/fib-1.1/Makefile
src/gui/Makefile
src/gui/gtk/Makefile
src/gui/sdl/Makefile
src/graphics/Makefile
src/graphics/gtk_drawing_area/Makefile
src/graphics/opengl/Makefile
src/graphics/null/Makefile
src/xpm/Makefile
])
